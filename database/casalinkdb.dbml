// Base de datos para CasaLink
// Formato DBML para https://dbdiagram.io/
// https://dbdiagram.io/d/casalinkdb-67ab3ca3263d6cf9a0c2f070

Enum "users_role_enum" {
  "user"
  "admin"
  "superadmin"
}

Enum "properties_propertyType_enum" {
  "apartamento"
  "casa"
  "piso"
  "duplex"
  "otro"
}

Enum "properties_status_enum" {
  "available"
  "unavailable"
  "rented"
  "pending"
  "rejected"
}

Enum "contracts_status_enum" {
  "pending"
  "approved"
  "rejected"
  "ongoing"
  "finished"
  "canceled"
}

Enum "notifications_type_enum" {
  "visit"
  "property"
  "review"
  "contract"
}

Enum "notifications_status_enum" {
  "requested"
  "approved"
  "rejecte"
}

Table "users" {
  "id" INT [pk, not null, increment]
  "name" VARCHAR(100)
  "lastName" VARCHAR(100)
  "legalId" VARCHAR(20) [unique]
  "email" VARCHAR(100) [unique, not null]
  "password" VARCHAR(255)
  "phone" VARCHAR(255)
  "avatarUrl" VARCHAR(255)
  "bio" TEXT
  "role" users_role_enum [default: 'user']
  "recoveryCode" VARCHAR(100) [default: NULL]
  "isEmailVerified" BOOLEAN [default: FALSE]
  "isDocsVerified" BOOLEAN [default: FALSE]
  "createdAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  "updatedAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]

  Indexes {
    (email, legalId, role) [name: "usersIdx"]
  }
}

Table "properties" {
  "id" INT [pk, not null, increment]
  "ownerId" INT [not null]
  "propertyTitle" VARCHAR(255) [not null]
  "propertyType" properties_propertyType_enum [not null]
  "description" TEXT [not null]
  "addressLocality" VARCHAR(255)
  "addressStreet" VARCHAR(255)
  "addressNumber" VARCHAR(10)
  "addressFloor" VARCHAR(10)
  "hasEnergyCert" BOOLEAN [default: false]
  "zipCode" VARCHAR(5) [not null]
  "location" POINT [not null]
  "squareMeters" SMALLINT
  "bedrooms" TINYINT [not null]
  "bathrooms" TINYINT [not null]
  "price" DECIMAL(10,2) [not null]
  "status" properties_status_enum [default: 'pending']
  "createdAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  "updatedAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]

  Indexes {
    (addressLocality, zipCode, price, status) [name: "propertiesIdx"]
  }
}

Table "contracts" {
  "id" INT [pk, not null, increment]
  "tenantId" INT
  "propertyId" INT
  "startDate" TIMESTAMP [not null]
  "endDate" TIMESTAMP [default: NULL]
  "pdfUrl" VARCHAR(255) [default: NULL]
  "status" contracts_status_enum [not null]
  "createdAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  "updatedAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]

  Indexes {
    (tenantId, propertyId, startDate, endDate, status) [name: "contractsIdx2"]
  }
}

Table "reviews" {
  "id" INT [pk, not null, increment]
  "reviewerId" INT
  "reviewedId" INT
  "contractId" INT
  "rating" TINYINT [not null]
  "comment" TEXT
  "createdAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  "removedAt" TIMESTAMP [default: NULL]

  Indexes {
    (reviewerId, reviewedId, contractId, rating) [name: "reviewsIdx"]
  }
}

Table "images" {
  "id" INT [pk, not null, increment]
  "propertyId" INT
  "imageUrl" VARCHAR(255) [not null]
  "sortIndex" TINYINT
  "createdAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  "updatedAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  "removedAt" TIMESTAMP [default: NULL]

  Indexes {
    sortIndex [name: "imagesIdx"]
  }
}

Table "favs" {
  "id" INT [pk, not null, increment]
  "userId" INT
  "propertyId" INT
  "createdAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  "removedAt" TIMESTAMP [default: NULL]

  Indexes {
    (userId, propertyId) [unique, name: "favsIdx"]
  }
}

Table "notifications" {
  "id" INT [pk, not null, increment]
  "userId" INT
  "propertyId" INT
  "message" TEXT [not null]
  "type" notifications_type_enum [not null]
  "status" notifications_status_enum [not null]
  "isRead" BOOLEAN [default: false]
  "createdAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  "readAt" TIMESTAMP [default: NULL]

  Indexes {
    (userId, propertyId, type, status) [name: "notificationsIdx"]
  }
}

Table "blocks" {
  "id" INT [pk, not null, increment]
  "userId" INT
  "propertyId" INT
  "createdAt" TIMESTAMP [default: `CURRENT_TIMESTAMP`]
  "removedAt" TIMESTAMP [default: NULL]

  Indexes {
    (userId, propertyId) [unique, name: "blocksIdx"]
  }
}

Ref:"users"."id" < "properties"."ownerId" [delete: cascade]

Ref:"users"."id" < "contracts"."tenantId" [delete: cascade]

Ref:"properties"."id" < "contracts"."propertyId" [delete: cascade]

Ref:"users"."id" < "reviews"."reviewerId" [delete: cascade]

Ref:"users"."id" < "reviews"."reviewedId" [delete: cascade]

Ref:"contracts"."id" < "reviews"."contractId" [delete: cascade]

Ref:"properties"."id" < "images"."propertyId"

Ref:"users"."id" < "favs"."userId"

Ref:"properties"."id" < "favs"."propertyId"

Ref:"users"."id" < "notifications"."userId"

Ref:"properties"."id" < "notifications"."propertyId"

Ref:"users"."id" < "blocks"."userId"

Ref:"properties"."id" < "blocks"."propertyId"